diff --git a/dts/platform.dtsi b/dts/platform.dtsi
deleted file mode 120000
index feed8b6..0000000
--- a/dts/platform.dtsi
+++ /dev/null
@@ -1 +0,0 @@
-noop.dtsi
\ No newline at end of file
diff --git a/dts/platform.dtsi b/dts/platform.dtsi
new file mode 100644
index 0000000..cff0236
--- /dev/null
+++ b/dts/platform.dtsi
@@ -0,0 +1,124 @@
+/dts-v1/;
+
+/ {
+    L18: soc {
+        L2: clint@38000000 {
+            compatible = "riscv,clint0";
+            interrupts-extended = <&L4 3 &L4 7>;
+            reg = <0x0 0x38000000 0x0 0x10000>;
+            //reg = <0x0 0x2000000 0x0 0x10000>;
+            reg-names = "control";
+            clock-frequency-mhz = <50>;
+        };
+        /*
+        L14: serial@60000000 {
+            compatible = "xilinx,uartlite";
+            //interrupt-parent = <&L1>;
+            interrupts = <3>;
+            reg = <0x0 0x60000000 0x0 0x1000>;
+            reg-names = "control";
+        };
+        */
+
+        /*
+        sdhci: mmc {
+            compatible = "nemu-sdhost";
+            reg = <0x0 0x40002000 0x0 0x1000>;
+        };
+        */
+
+
+        clkc: misc_clk_0 {
+            #clock-cells = <0>;
+            clock-frequency = <50000000>;
+            compatible = "fixed-clock";
+        };
+
+        /*
+        ethernet1: ethernet@31010000 {
+            compatible = "st,stm32-dwmac", "snps,dwmac-3.50a";
+            reg = <0 0x31010000 0 0x10000>;
+            reg-names = "stmmaceth";
+            interrupt-parent = <&PLIC>;
+            interrupts = <3 2 1>;
+            interrupt-names = "eth_lpi", "macirq", "eth_wake_irq";
+            clock-names = "stmmaceth";
+            clocks = <&clkc>;
+            //st,syscon = <&syscfg 0x4>;
+            snps,pbl = <2>;
+            snps,mixed-burst;
+            phy-mode = "rgmii";
+            // stmmac driver can not find phy if add this node
+            //
+            //    phyaddr = <0x7>;
+            //    phy-handle = <&phy>;
+            //    mdio {
+            //        #address-cells = <0x1>;
+            //        #size-cells = <0x0>;
+            //        phyaddr = <0x7>;
+            //        compatible = "snps,dwmac-mdio";
+            //        phy: phy@7 {
+            //            phyaddr = <0x7>;
+            //            compatible = "marvell,88e1116r";
+            //            device_type = "ethernet-phy";
+            //            reg = <0x7>;
+            //        };
+            //    };
+            //
+       };
+
+        ethernet: ethernet@31010000{
+            #address-cells = <1>;
+            #size-cells = <1>;
+            compatible = "st,stm32-dwmac", "snps,dwmac-3.50a";
+            reg-names = "stmmaceth";
+            reg = <0 0x31010000 0 0x10000>;
+            interrupt-names = "eth_wake_irq", "macirq", "eth_lpi";
+            interrupt-parent = <&PLIC>;
+            interrupts = <43 44 45>;
+            clock-names = "stmmaceth";
+            clocks = <&clkc>;
+            snps,pbl = <2>;
+            snps,mixed-burst;
+            phy-mode = "rgmii";
+        };
+        */
+
+        sdhci2: sdhci@30050000 {
+            compatible = "snps,dwcmshc-sdhci";
+            reg = <0 0x30050000 0 0x10000>;
+            interrupt-parent = <&PLIC>;
+            interrupts = <55 56>;
+            clocks = <&clkc>;
+            clock-names = "core";
+            sd-uhs-sdr12;
+            disable-wp;
+            bus-width = <4>;
+        };
+
+//        EXTINTR: external-interrupts {
+//            interrupt-parent = <&PLIC>;
+//            interrupts = <1 2 3 4 5>;
+//        };
+        PLIC: interrupt-controller@3c000000 {
+            #interrupt-cells = <1>;
+            compatible = "riscv,plic0";
+            interrupt-controller;
+            interrupts-extended = <&L4 9 &L4 11>;
+            //reg = <0 0xc000000 0 0x4000000>;
+            reg = <0 0x3c000000 0 0x4000000>;
+            reg-names = "control";
+            riscv,max-priority = <7>;
+            riscv,ndev = <64>;
+        };
+    };
+
+    chosen {
+        bootargs = "root=/dev/mmcblk0p1 rootfstype=ext4 rw rootwait earlycon noinitrd";
+    };
+
+    L11: memory@100000000 {
+        device_type = "memory";
+        reg = <0x0 0x80000000 0x0 0x80000000>;
+    };
+};
diff --git a/dts/system.dts b/dts/system.dts
index 8074d06..fd2458c 100644
--- a/dts/system.dts
+++ b/dts/system.dts
@@ -9,7 +9,9 @@
 	L19: cpus {
 		#address-cells = <1>;
 		#size-cells = <0>;
-		timebase-frequency = <1000000>;
+		// timebase-frequency = <1000000>;
+    // timebase-frequency = <990099>;
+    timebase-frequency = <495049>;
 		L6: cpu@0 {
 			clock-frequency = <1000000>;
 			compatible = "XiangShan,YanqiHu", "riscv";
@@ -29,7 +31,9 @@
 			reg = <0x0>;
 			riscv,isa = "rv64imafdc";
 			status = "okay";
-			timebase-frequency = <1000000>;
+			// timebase-frequency = <1000000>;
+      // timebase-frequency = <990099>;
+      timebase-frequency = <495049>;
 			tlb-split;
 			L4: interrupt-controller {
 				#interrupt-cells = <1>;
diff --git a/machine/uart_snps.c b/machine/uart_snps.c
index 2df99cf..cd69a3b 100644
--- a/machine/uart_snps.c
+++ b/machine/uart_snps.c
@@ -126,7 +126,12 @@ void initUart()
     //REG_WRITE(DLL,0x82);   //0x00 20MHz/9600
     //REG_WRITE(DLL,0x6c);   //0x00 200MHz/115200/16
     //REG_WRITE(DLL,0x36);   //0x00 100MHz/115200/16
-    REG_WRITE(DLL,0xa2);   //0x00 25MHz/9600/16
+    //REG_WRITE(DLL,0xa2);   //0x00 25MHz/9600/16
+    REG_WRITE(DLL,0x1b);   //0x00 50MHz/115200/16
+    //REG_WRITE(DLL, 0x41);  //0x00 10MHz/9600/16
+    //REG_WRITE(DLL, 0x82);  //0x00 20MHz/9600/16
+    //REG_WRITE(DLL,0xD);  //0x00 2MHz/9600/16
+
     //REG_WRITE(DLL+0x10000*uart_num,0x1);   //0x00 100M/('h36*16) ~= 115200
     REG_WRITE(LCR,0x03);  //0x0c
     REG_WRITE(FCR,0x01);  //0x08  // enable fifo
@@ -151,25 +156,25 @@ void copyAndRun(void)
 {
   extern uint64_t reset_vector[];
   extern uint64_t _run[];
-  extern uint64_t _data[];
+  // extern uint64_t _data[];
   //extern uint64_t _end[];
 
   #define ROM_START 0x10000000
   #define RAM_START 0x80000000
 
-  register uint64_t *romStart asm("t0") = (uint64_t *)(unsigned long long)ROM_START;
+  // register uint64_t *romStart asm("t0") = (uint64_t *)(unsigned long long)ROM_START;
   register uint64_t *ramStart asm("t1") = (uint64_t *)(unsigned long long)RAM_START;
   register uint64_t *start asm("t2") = &reset_vector[0];
-  register uint64_t *end asm("t3") = &_data[0];
+  // register uint64_t *end asm("t3") = &_data[0];
   //register uint64_t *end asm("t3") = &_end[0];
-  uint64_t size = end - start;
+  // uint64_t size = end - start;
 
-  uint64_t i = 0;
-  for (i = 0; i < size; i += 16) {
-     #define MACRO(j) ramStart[i + j] = romStart[i + j]
-     #define MACRO4(j) MACRO(j); MACRO(j + 1); MACRO(j + 2); MACRO(j + 3);
-     MACRO4(0); MACRO4(4); MACRO4(8); MACRO4(12);
-  }
+  // uint64_t i = 0;
+  // for (i = 0; i < size; i += 16) {
+  //    #define MACRO(j) ramStart[i + j] = romStart[i + j]
+  //    #define MACRO4(j) MACRO(j); MACRO(j + 1); MACRO(j + 2); MACRO(j + 3);
+  //    MACRO4(0); MACRO4(4); MACRO4(8); MACRO4(12);
+  // }
 
   register uint64_t *run asm("t4") = &_run[0];
   uint64_t runOffset = run - start;
@@ -178,6 +183,7 @@ void copyAndRun(void)
   (*(void(*) ())runAddr)();
 }
 
+
 void initBSS(void)
 {
   #define RAM_START 0x80000000
